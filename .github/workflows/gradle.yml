name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  #pull_request:
    #branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    #build 폴더를 삭제하고 다시 빌드
    - name: Build with Gradle
      run: ./gradlew bootJar

    - name: docker image build
      run: docker build -t jiyu1948/busan_moon .

#    - name: Set up Docker Buildx
#      uses: docker/setup-buildx-action@v2

    - name: DockerHub Login
      uses: docker/login-action@v2.2.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/busan_moon:latest

#    - name: Build and push Docker images
#      uses: docker/build-push-action@v4.1.1
#      with:
#          push: true
#          file: ./Dockerfile
#          tags: jiyu1948/${{ secrets.DOCKERHUB_REPO }}:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
#      - name: Copying project to build folder
#        run: |
#          mkdir ../deploy
#          cp -R project/* ../deploy
#
#      - name: Transfer Deploy Script use SCP
#        uses: appleboy/scp-action@master
#        with:
#          username: ubuntu
#          host: ${{ secrets.EC2PUBLICDNS }}
#          key: ${{ secrets.EC2PRIVATE_KEY }}
#          source: "deploy.sh"
#          target: "/deploy"

      - name: Get Github Actions IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Configure AWS Credentials For GitHub Actions
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_IAM_PUBLIC }}
          aws-secret-access-key: ${{ secrets.AWS_IAM_PRIVATE }}
          aws-region: ap-northeast-2

      - name: Add Github Actions IP to Security group
        run: |
          aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: DockerHub Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: DockerImagePull
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2PUBLICDNS }} # EC2 인스턴스 퍼블릭 DNS
          username: ec2-user
          key: ${{ secrets.EC2PRIVATE_KEY }} # pem 키
          port: 22
          timeout: 40s
          script_stop: true
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/busan_ci:latest
            docker stop $(docker ps -a -q)
            docker run -it -p 8083:8083 ${{ secrets.DOCKERHUB_USERNAME }}/busan_ci:latest
            docker rm $(docker ps --filter 'status=exited' -a -q)
            docker image prune -a -f

      - name: Remove Github Actions IP From Security Group
        run: |
          aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32